frontend
|_package.json    
    {
  "name": "aerospace-dashboard",
  "version": "1.0.0",
  "description": "AI-powered aerospace project management dashboard",
  "main": "src/index.js",
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "dependencies": {
    "@tailwindcss/postcss": "^4.0.3",
    "axios": "^1.3.4",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-router-dom": "^6.29.0",
    "react-scripts": "^5.0.1",
    "recharts": "^2.15.1",
    "tailwindcss": "^3.3.0"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.21"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
|_tailwind.config.js
    module.exports = {
    content: ["./src/**/*.{js,jsx,ts,tsx}"],
    theme: {
      extend: {},
    },
    plugins: [],
  };
  
|_src
  |_components
    |_AllocationChart.js
    import React from "react";
import { Bar } from "recharts";

const AllocationChart = ({ data }) => {
  return (
    <div className="p-4 bg-white shadow-md rounded-md">
      <h2 className="text-lg font-semibold mb-2">Resource Allocation</h2>
      <Bar data={data} />
    </div>
  );
};

export default AllocationChart;
    |_Button.js
    import React from "react";

const Button = ({ label, onClick, variant = "primary" }) => {
  const baseStyle = "px-4 py-2 font-semibold rounded-md transition";
  const variants = {
    primary: "bg-blue-500 text-white hover:bg-blue-600",
    secondary: "bg-gray-500 text-white hover:bg-gray-600",
    danger: "bg-red-500 text-white hover:bg-red-600",
  };

  return (
    <button
      className={`${baseStyle} ${variants[variant]}`}
      onClick={onClick}
    >
      {label}
    </button>
  );
};

export default Button;
    |_Navbar.js
    import { Link } from "react-router-dom";

const Navbar = () => {
  return (
    <nav className="bg-gray-900 text-white p-4 flex justify-between items-center">
      <h1 className="text-xl font-bold">Aerospace Project Manager</h1>
      <div>
        <Link to="/" className="mx-4 hover:text-gray-400">Dashboard</Link>
        <Link to="/projects" className="mx-4 hover:text-gray-400">Projects</Link>
        <Link to="/ai-analysis" className="mx-4 hover:text-gray-400">AI Analysis</Link>
        <Link to="/risk-analysis" className="mx-4 hover:text-gray-400">Risk Analysis</Link>
        <Link to="/allocations" className="mx-4 hover:text-gray-400">Allocations</Link>
      </div>
    </nav>
  );
};

export default Navbar;

    |_ProjectCard.js
    import { Link } from "react-router-dom";

const ProjectCard = ({ project }) => {
  return (
    <div className="bg-white shadow-lg rounded-lg p-4 m-2">
      <h3 className="text-xl font-bold mb-2">{project.name}</h3>
      <p className="text-gray-600">Budget: ${project.budget}</p>
      <p className="text-gray-600">Deadline: {project.deadline}</p>
      <p className={`text-sm font-semibold ${project.riskLevel === 'High' ? 'text-red-600' : 'text-green-600'}`}>
        Risk Level: {project.riskLevel}
      </p>
      <Link to={`/projects/${project.id}`} className="block mt-4 text-blue-500 hover:underline">
        View Details
      </Link>
    </div>
  );
};

export default ProjectCard;

    |_RiskCard.js
    import React from "react";

const RiskCard = ({ project }) => {
  return (
    <div className="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-md">
      <p className="font-semibold">{project.name}</p>
      <p>Risk Level: {project.riskLevel}</p>
    </div>
  );
};

export default RiskCard;
    |_Sidebar.js
    import { Link } from "react-router-dom";

const Sidebar = () => {
  return (
    <aside className="bg-gray-800 text-white w-64 min-h-screen p-5">
      <h2 className="text-lg font-bold mb-4">Navigation</h2>
      <ul>
        <li className="mb-2">
          <Link to="/" className="block py-2 px-4 hover:bg-gray-700 rounded">Dashboard</Link>
        </li>
        <li className="mb-2">
          <Link to="/projects" className="block py-2 px-4 hover:bg-gray-700 rounded">Projects</Link>
        </li>
        <li className="mb-2">
          <Link to="/ai-analysis" className="block py-2 px-4 hover:bg-gray-700 rounded">AI Analysis</Link>
        </li>
        <li className="mb-2">
          <Link to="/risk-analysis" className="block py-2 px-4 hover:bg-gray-700 rounded">Risk Analysis</Link>
        </li>
        <li>
          <Link to="/allocations" className="block py-2 px-4 hover:bg-gray-700 rounded">Allocations</Link>
        </li>
      </ul>
    </aside>
  );
};

export default Sidebar;

    |_Table.js
    import React from "react";

const Table = ({ headers, data }) => {
  return (
    <table className="min-w-full border-collapse border border-gray-200">
      <thead>
        <tr className="bg-gray-100">
          {headers.map((header) => (
            <th key={header} className="border border-gray-300 p-2">
              {header}
            </th>
          ))}
        </tr>
      </thead>
      <tbody>
        {data.map((row, index) => (
          <tr key={index} className="border border-gray-300">
            {headers.map((header) => (
              <td key={header} className="p-2 border border-gray-300">
                {row[header]}
              </td>
            ))}
          </tr>
        ))}
      </tbody>
    </table>
  );
};

export default Table;

  |_hooks
    |_useFetch.js
    import { useState, useEffect } from "react";
import api from "../services/api";

const useFetch = (endpoint) => {
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    api.get(endpoint)
      .then((response) => {
        setData(response.data);
      })
      .catch((err) => {
        setError(err);
      })
      .finally(() => {
        setLoading(false);
      });
  }, [endpoint]);

  return { data, loading, error };
};

export default useFetch;

  |_pages
    |_AIAnalysis.js
    // AIAnalysis.js - AI-based analysis of project risks and optimizations
import React from "react";
import Navbar from "../components/Navbar";
import Sidebar from "../components/Sidebar";
import useFetch from "../hooks/useFetch";
import { API_BASE_URL } from "../services/api";
import AllocationChart from "../components/AllocationChart";

const AIAnalysis = () => {
  const { data: analysis, loading } = useFetch(`${API_BASE_URL}/ai-analysis`);

  if (loading) return <p>Loading AI analysis...</p>;

  return (
    <div className="flex">
      <Sidebar />
      <div className="flex-1 p-6">
        <Navbar />
        <h1 className="text-2xl font-bold mb-4">AI Analysis</h1>
        <h2 className="text-xl font-semibold">Optimized Resource Allocation</h2>
        <AllocationChart data={analysis.optimizedAllocations} />
        <h2 className="text-xl font-semibold mt-6">Predicted Risks</h2>
        <p>{analysis.riskPrediction}</p>
      </div>
    </div>
  );
};

export default AIAnalysis;

    |_Allocation.js
    import AllocationChart from "../components/AllocationChart";
import { useState, useEffect } from "react";
import api from "../services/api";

const Allocations = () => {
  const [allocations, setAllocations] = useState([]);

  useEffect(() => {
    api.get("/allocations").then((response) => {
      setAllocations(response.data);
    });
  }, []);

  return (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4">Resource Allocations</h2>
      <AllocationChart data={allocations} />
    </div>
  );
};

export default Allocations;

    |_Dashboard.js
    import React from "react";
import Navbar from "../components/Navbar";
import Sidebar from "../components/Sidebar";
import ProjectCard from "../components/ProjectCard";
import RiskCard from "../components/RiskCard";
import AllocationChart from "../components/AllocationChart";
import useFetch from "../hooks/useFetch";
import { API_BASE_URL } from "../services/api";

const Dashboard = () => {
  const { data: projects, loading, error } = useFetch(`${API_BASE_URL}/projects`);

  // Handle loading state
  if (loading) {
    return (
      <div className="flex">
        <Sidebar />
        <div className="flex-1 p-6">
          <Navbar />
          <p>Loading...</p>
        </div>
      </div>
    );
  }

  // Handle API errors
  if (error) {
    return (
      <div className="flex">
        <Sidebar />
        <div className="flex-1 p-6">
          <Navbar />
          <p className="text-red-500">Error loading projects. Please try again later.</p>
        </div>
      </div>
    );
  }

  // Ensure projects is an array before mapping
  const projectList = projects || [];

  return (
    <div className="flex">
      <Sidebar />
      <div className="flex-1 p-6">
        <Navbar />
        <h1 className="text-2xl font-bold mb-4">Dashboard</h1>

        {/* Projects Section */}
        {projectList.length > 0 ? (
          <div className="grid grid-cols-3 gap-4">
            {projectList.map((project) => (
              <ProjectCard key={project.id} project={project} />
            ))}
          </div>
        ) : (
          <p className="text-gray-500">No projects available.</p>
        )}

        {/* Risk Overview Section */}
        <div className="mt-6">
          <h2 className="text-xl font-semibold">Risk Overview</h2>
          {projectList.length > 0 ? (
            <div className="grid grid-cols-3 gap-4">
              {projectList.map((project) => (
                <RiskCard key={project.id} project={project} />
              ))}
            </div>
          ) : (
            <p className="text-gray-500">No risk data available.</p>
          )}
        </div>

        {/* Resource Allocation Section */}
        <div className="mt-6">
          <h2 className="text-xl font-semibold">Resource Allocation</h2>
          {projectList.length > 0 ? (
            <AllocationChart data={projectList} />
          ) : (
            <p className="text-gray-500">No allocation data available.</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default Dashboard;

    |_ProjectDetails.js
    import React from "react";
import { useParams } from "react-router-dom";
import Navbar from "../components/Navbar";
import Sidebar from "../components/Sidebar";
import useFetch from "../hooks/useFetch";
import { API_BASE_URL } from "../services/api";

const ProjectDetails = () => {
  const { id } = useParams();
  const { data: project, loading } = useFetch(`${API_BASE_URL}/projects/${id}`);

  if (loading) return <p>Loading...</p>;

  return (
    <div className="flex">
      <Sidebar />
      <div className="flex-1 p-6">
        <Navbar />
        <h1 className="text-2xl font-bold mb-4">{project.name}</h1>
        <p><strong>Budget:</strong> ${project.budget}</p>
        <p><strong>Deadline:</strong> {project.deadline}</p>
        <p><strong>Risk Level:</strong> {project.riskLevel}</p>
        <h2 className="text-xl font-semibold mt-6">AI Recommendations</h2>
        <p>{project.aiRecommendation}</p>
      </div>
    </div>
  );
};

export default ProjectDetails;
    |_Projects.js
    import React from "react";
import Navbar from "../components/Navbar";
import Sidebar from "../components/Sidebar";
import Table from "../components/Table";
import useFetch from "../hooks/useFetch";
import { API_BASE_URL } from "../services/api";

const Projects = () => {
  const { data: projects, loading } = useFetch(`${API_BASE_URL}/projects`);

  if (loading) return <p>Loading...</p>;

  const headers = ["Name", "Budget", "Deadline", "Risk Level"];
  const data = projects.map((proj) => ({
    Name: proj.name,
    Budget: `$${proj.budget}`,
    Deadline: proj.deadline,
    "Risk Level": proj.riskLevel,
  }));

  return (
    <div className="flex">
      <Sidebar />
      <div className="flex-1 p-6">
        <Navbar />
        <h1 className="text-2xl font-bold mb-4">Projects</h1>
        <Table headers={headers} data={data} />
      </div>
    </div>
  );
};

export default Projects;

    |_RiskAnalysis.js
    import React from "react";
import Navbar from "../components/Navbar";
import Sidebar from "../components/Sidebar";
import useFetch from "../hooks/useFetch";
import { API_BASE_URL } from "../services/api";
import RiskCard from "../components/RiskCard";

const RiskAnalysis = () => {
  const { data: risks, loading } = useFetch(`${API_BASE_URL}/risk-analysis`);

  if (loading) return <p>Loading risk analysis...</p>;

  return (
    <div className="flex">
      <Sidebar />
      <div className="flex-1 p-6">
        <Navbar />
        <h1 className="text-2xl font-bold mb-4">Risk Analysis</h1>
        <div className="grid grid-cols-3 gap-4">
          {risks.map((risk) => (
            <RiskCard key={risk.id} project={risk} />
          ))}
        </div>
      </div>
    </div>
  );
};

export default RiskAnalysis;

  |_services
    |_api.js
    import axios from "axios";

export const API_BASE_URL = "http://localhost:8000/api"; // Ensure this matches your FastAPI backend

const api = axios.create({
  baseURL: API_BASE_URL,
  headers: {
    "Content-Type": "application/json",
  },
});

// 🔹 Generic API Request Handler with Error Handling
const handleRequest = async (method, url, data = null) => {
  try {
    const response = await api({ method, url, data });
    return response.data;
  } catch (error) {
    console.error(`API Error: ${error.response?.data?.message || error.message}`);
    throw error.response?.data || { error: "An unknown error occurred" };
  }
};

// ✅ Fetch All Projects
export const fetchProjects = async () => handleRequest("get", "/projects");

// ✅ Fetch Project Details by ID
export const fetchProjectDetails = async (projectId) =>
  handleRequest("get", `/projects/${projectId}`);

// ✅ Fetch AI Analysis Results
export const fetchAIAnalysis = async () => handleRequest("get", "/ai-analysis");

// ✅ Fetch Risk Analysis Data
export const fetchRiskAnalysis = async () => handleRequest("get", "/risk-analysis");

// ✅ Fetch Resource Allocations
export const fetchAllocations = async () => handleRequest("get", "/allocations");

// ✅ Trigger AI Optimization for Resource Allocation
export const triggerAIOptimization = async () =>
  handleRequest("post", "/ai-analysis/trigger");

// ✅ Update Project Allocations Based on AI Suggestions
export const updateProjectAllocation = async (projectId, allocationData) =>
  handleRequest("post", `/projects/${projectId}/allocate`, allocationData);

export default api;

  |_App.jsx
    import React from "react";
import { Route, Routes } from "react-router-dom";
import Dashboard from "./pages/Dashboard";
import Projects from "./pages/Projects";
import ProjectDetails from "./pages/ProjectDetails"; // Fix file name
import AIAnalysis from "./pages/AIAnalysis";
import RiskAnalysis from "./pages/RiskAnalysis";
import Allocations from "./pages/Allocations";
import Navbar from "./components/Navbar";
import Sidebar from "./components/Sidebar";
import "./index.css";

function App() {
  return (
    <div className="flex h-screen bg-gray-100">
      <Sidebar />
      <div className="flex flex-col flex-1">
        <Navbar />
        <main className="p-6">
          <Routes>
            <Route path="/" element={<Dashboard />} />
            <Route path="/projects" element={<Projects />} />
            <Route path="/projects/:id" element={<ProjectDetails />} />
            <Route path="/ai-analysis" element={<AIAnalysis />} />
            <Route path="/risk-analysis" element={<RiskAnalysis />} />
            <Route path="/allocations" element={<Allocations />} />
          </Routes>
        </main>
      </div>
    </div>
  );
}

export default App;

  |_index.js
    import React from "react";
import ReactDOM from "react-dom/client";
import { BrowserRouter } from "react-router-dom"; // Ensure this is here
import App from "./App";
import "./index.css";

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(
  <BrowserRouter>
    <App />
  </BrowserRouter>
);
